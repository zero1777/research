["___10_input = torch._convolution(x, self.conv1.weight, self.conv1.bias, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__10_input = ___10_input.detach();__10_input.requires_grad_();\nshapes['__10_input'] = __10_input.shape;", "loss = 'LOSS'\n\n"]
["___7_input = torch.relu(__10_input)\n\n__7_input = ___7_input.detach();__7_input.requires_grad_();\nshapes['__7_input'] = __7_input.shape;shapes['__7_input.grad_fn._saved_result'] = ___7_input.grad_fn._saved_result.shape;", "loss = 'LOSS'\n\n"]
["___16_input0 = torch.max_pool2d(__7_input, [2, 2], [2, 2], [0, 0], [1, 1])\n\n__16_input0 = ___16_input0.detach();__16_input0.requires_grad_();\nshapes['__16_input0'] = __16_input0.shape;shapes['__16_input0.grad_fn._saved_result1'] = ___16_input0.grad_fn._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___23_input = torch._convolution(__16_input0, self.conv2.weight, self.conv2.bias, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__23_input = ___23_input.detach();__23_input.requires_grad_();\nshapes['__23_input'] = __23_input.shape;", "loss = 'LOSS'\n\n"]
["___28_input0 = torch.relu(__23_input)\n\n__28_input0 = ___28_input0.detach();__28_input0.requires_grad_();\nshapes['__28_input0'] = __28_input0.shape;shapes['__28_input0.grad_fn._saved_result'] = ___28_input0.grad_fn._saved_result.shape;", "loss = 'LOSS'\n\n"]
["___30_x = torch.max_pool2d(__28_input0, [2, 2], [2, 2], [0, 0], [1, 1])\n\n__30_x = ___30_x.detach();__30_x.requires_grad_();\n__29_input1 = torch.flatten(__30_x, 1)\nshapes['__30_x'] = __30_x.shape;shapes['__29_input1'] = __29_input1.shape;shapes['__30_x.grad_fn._saved_result1'] = ___30_x.grad_fn._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___38_fv = torch.nn.functional.linear(__29_input1, self.fc1.weight, self.fc1.bias)\n\n__38_fv = ___38_fv.detach();__38_fv.requires_grad_();\nshapes['__38_fv'] = __38_fv.shape;shapes['__38_fv.grad_fn._saved_mat2'] = ___38_fv.grad_fn._saved_mat2.shape;", "loss = 'LOSS'\n\n"]
["___35_input2 = torch.relu(__38_fv)\n\n__35_input2 = ___35_input2.detach();__35_input2.requires_grad_();\nshapes['__35_input2'] = __35_input2.shape;shapes['__35_input2.grad_fn._saved_result'] = ___35_input2.grad_fn._saved_result.shape;", "loss = 'LOSS'\n\n"]
["___42_fv = torch.nn.functional.linear(__35_input2, self.fc2.weight, self.fc2.bias)\n\n__42_fv = ___42_fv.detach();__42_fv.requires_grad_();\nshapes['__42_fv'] = __42_fv.shape;shapes['__42_fv.grad_fn._saved_mat2'] = ___42_fv.grad_fn._saved_mat2.shape;", "loss = 'LOSS'\n\n"]
["___39_input3 = torch.relu(__42_fv)\n\n__39_input3 = ___39_input3.detach();__39_input3.requires_grad_();\nshapes['__39_input3'] = __39_input3.shape;shapes['__39_input3.grad_fn._saved_result'] = ___39_input3.grad_fn._saved_result.shape;", "loss = 'LOSS'\n\n"]
["___45_fv = torch.nn.functional.linear(__39_input3, self.fc3.weight, self.fc3.bias)\n\n__45_fv = ___45_fv.detach();__45_fv.requires_grad_();\nshapes['__45_fv'] = __45_fv.shape;shapes['__45_fv.grad_fn._saved_mat2'] = ___45_fv.grad_fn._saved_mat2.shape;", "loss = 'LOSS'\n\n"]










# resnet
["___13_input = torch._convolution(x, self.conv1.weight, None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__13_input = ___13_input.detach();__13_input.requires_grad_();\nshapes['__13_input'] = __13_input.shape;", "loss = 'LOSS'\n\n"]
["___24_input = torch.batch_norm(__13_input, self.bn1.weight, self.bn1.bias, self.bn1.running_mean, self.bn1.running_var, True, 0.1, 1e-05, True)\n___25_fv = torch.relu_(___24_input)\n__24_input = ___24_input.detach();__24_input.requires_grad_();\n__25_fv = __24_input\nshapes['__24_input'] = __24_input.shape;shapes['__25_fv'] = __25_fv.shape;shapes['__24_input.grad_fn._saved_result'] = ___24_input.grad_fn._saved_result.shape;shapes['__24_input.grad_fn.next_functions[0][0]._saved_result3'] = ___24_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__24_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___24_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__24_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___24_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__24_input.grad_fn.next_functions[0][0]._saved_result2'] = ___24_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__24_input.grad_fn.next_functions[0][0]._saved_result1'] = ___24_input.grad_fn.next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___27_input = torch.max_pool2d(__25_fv, [3, 3], [2, 2], [1, 1], [1, 1])\n\n__27_input = ___27_input.detach();__27_input.requires_grad_();\nshapes['__27_input'] = __27_input.shape;shapes['__27_input.grad_fn._saved_result1'] = ___27_input.grad_fn._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___46_input = torch._convolution(__27_input, self.layer1[0].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__46_input = ___46_input.detach();__46_input.requires_grad_();\nshapes['__46_input'] = __46_input.shape;", "___57_input = torch.batch_norm(__46_input, self.layer1[0].bn1.weight, self.layer1[0].bn1.bias, self.layer1[0].bn1.running_mean, self.layer1[0].bn1.running_var, True, 0.1, 1e-05, True)\n___59_fv = torch.relu_(___57_input)\n__57_input = ___57_input.detach();__57_input.requires_grad_();\n__59_fv = __57_input\nshapes['__57_input'] = __57_input.shape;shapes['__59_fv'] = __59_fv.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_input'] = ___57_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__57_input.grad_fn._saved_result'] = ___57_input.grad_fn._saved_result.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_result2'] = ___57_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_result3'] = ___57_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___57_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___57_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__57_input.grad_fn.next_functions[0][0]._saved_result1'] = ___57_input.grad_fn.next_functions[0][0]._saved_result1.shape;", "___61_input = torch._convolution(__59_fv, self.layer1[0].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__61_input = ___61_input.detach();__61_input.requires_grad_();\nshapes['__61_input'] = __61_input.shape;shapes['__61_input.grad_fn._saved_input'] = ___61_input.grad_fn._saved_input.shape;", "___73_input = torch.batch_norm(__61_input, self.layer1[0].bn2.weight, self.layer1[0].bn2.bias, self.layer1[0].bn2.running_mean, self.layer1[0].bn2.running_var, True, 0.1, 1e-05, True)\n___74_fv = torch.relu_(___73_input)\n__73_input = ___73_input.detach();__73_input.requires_grad_();\n__74_fv = __73_input\nshapes['__73_input'] = __73_input.shape;shapes['__74_fv'] = __74_fv.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_input'] = ___73_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__73_input.grad_fn._saved_result'] = ___73_input.grad_fn._saved_result.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___73_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___73_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_result2'] = ___73_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_result1'] = ___73_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__73_input.grad_fn.next_functions[0][0]._saved_result3'] = ___73_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___77_input = torch._convolution(__74_fv, self.layer1[0].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__77_input = ___77_input.detach();__77_input.requires_grad_();\nshapes['__77_input'] = __77_input.shape;shapes['__77_input.grad_fn._saved_input'] = ___77_input.grad_fn._saved_input.shape;", "___94_input = torch._convolution(__27_input, self.layer1[0].downsample[0].weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__94_input = ___94_input.detach();__94_input.requires_grad_();\nshapes['__94_input'] = __94_input.shape;", "___105_identity = torch.batch_norm(__94_input, self.layer1[0].downsample[1].weight, self.layer1[0].downsample[1].bias, self.layer1[0].downsample[1].running_mean, self.layer1[0].downsample[1].running_var, True, 0.1, 1e-05, True)\n\n__105_identity = ___105_identity.detach();__105_identity.requires_grad_();\nshapes['__105_identity'] = __105_identity.shape;shapes['__105_identity.grad_fn._saved_input'] = ___105_identity.grad_fn._saved_input.shape;shapes['__105_identity.grad_fn._saved_running_var'] = ___105_identity.grad_fn._saved_running_var.shape;shapes['__105_identity.grad_fn._saved_result2'] = ___105_identity.grad_fn._saved_result2.shape;shapes['__105_identity.grad_fn._saved_result3'] = ___105_identity.grad_fn._saved_result3.shape;shapes['__105_identity.grad_fn._saved_running_mean'] = ___105_identity.grad_fn._saved_running_mean.shape;shapes['__105_identity.grad_fn._saved_result1'] = ___105_identity.grad_fn._saved_result1.shape;", "___88_out = torch.batch_norm(__77_input, self.layer1[0].bn3.weight, self.layer1[0].bn3.bias, self.layer1[0].bn3.running_mean, self.layer1[0].bn3.running_var, True, 0.1, 1e-05, True)\n___89_input = torch.Tensor.add_(___88_out, __105_identity)\n___106_fv = torch.relu_(___89_input)\n__88_out = ___88_out.detach();__88_out.requires_grad_();\n__89_input = __88_out\n__106_fv = __89_input\nshapes['__88_out'] = __88_out.shape;shapes['__89_input'] = __89_input.shape;shapes['__106_fv'] = __106_fv.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__88_out.grad_fn._saved_result'] = ___88_out.grad_fn._saved_result.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___88_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;", '___105_identity.data = torch.empty(0,device=device);__105_identity.data = torch.empty(0,device=device); ', "loss = 'LOSS'\n\n"]
["___116_input = torch._convolution(__106_fv, self.layer1[1].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__116_input = ___116_input.detach();__116_input.requires_grad_();\nshapes['__116_input'] = __116_input.shape;", "___127_input = torch.batch_norm(__116_input, self.layer1[1].bn1.weight, self.layer1[1].bn1.bias, self.layer1[1].bn1.running_mean, self.layer1[1].bn1.running_var, True, 0.1, 1e-05, True)\n___129_fv = torch.relu_(___127_input)\n__127_input = ___127_input.detach();__127_input.requires_grad_();\n__129_fv = __127_input\nshapes['__127_input'] = __127_input.shape;shapes['__129_fv'] = __129_fv.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_input'] = ___127_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__127_input.grad_fn._saved_result'] = ___127_input.grad_fn._saved_result.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___127_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___127_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_result2'] = ___127_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_result1'] = ___127_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__127_input.grad_fn.next_functions[0][0]._saved_result3'] = ___127_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___131_input = torch._convolution(__129_fv, self.layer1[1].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__131_input = ___131_input.detach();__131_input.requires_grad_();\nshapes['__131_input'] = __131_input.shape;shapes['__131_input.grad_fn._saved_input'] = ___131_input.grad_fn._saved_input.shape;", "___143_input = torch.batch_norm(__131_input, self.layer1[1].bn2.weight, self.layer1[1].bn2.bias, self.layer1[1].bn2.running_mean, self.layer1[1].bn2.running_var, True, 0.1, 1e-05, True)\n___144_fv = torch.relu_(___143_input)\n__143_input = ___143_input.detach();__143_input.requires_grad_();\n__144_fv = __143_input\nshapes['__143_input'] = __143_input.shape;shapes['__144_fv'] = __144_fv.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_input'] = ___143_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__143_input.grad_fn._saved_result'] = ___143_input.grad_fn._saved_result.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___143_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_result1'] = ___143_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_result2'] = ___143_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_result3'] = ___143_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__143_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___143_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___147_input = torch._convolution(__144_fv, self.layer1[1].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__147_input = ___147_input.detach();__147_input.requires_grad_();\nshapes['__147_input'] = __147_input.shape;shapes['__147_input.grad_fn._saved_input'] = ___147_input.grad_fn._saved_input.shape;", "___158_out = torch.batch_norm(__147_input, self.layer1[1].bn3.weight, self.layer1[1].bn3.bias, self.layer1[1].bn3.running_mean, self.layer1[1].bn3.running_var, True, 0.1, 1e-05, True)\n___159_input = torch.Tensor.add_(___158_out, __106_fv)\n___160_fv = torch.relu_(___159_input)\n__158_out = ___158_out.detach();__158_out.requires_grad_();\n__159_input = __158_out\n__160_fv = __159_input\nshapes['__158_out'] = __158_out.shape;shapes['__159_input'] = __159_input.shape;shapes['__160_fv'] = __160_fv.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__158_out.grad_fn._saved_result'] = ___158_out.grad_fn._saved_result.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___158_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___170_input = torch._convolution(__160_fv, self.layer1[2].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__170_input = ___170_input.detach();__170_input.requires_grad_();\nshapes['__170_input'] = __170_input.shape;", "___181_input = torch.batch_norm(__170_input, self.layer1[2].bn1.weight, self.layer1[2].bn1.bias, self.layer1[2].bn1.running_mean, self.layer1[2].bn1.running_var, True, 0.1, 1e-05, True)\n___183_fv = torch.relu_(___181_input)\n__181_input = ___181_input.detach();__181_input.requires_grad_();\n__183_fv = __181_input\nshapes['__181_input'] = __181_input.shape;shapes['__183_fv'] = __183_fv.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_input'] = ___181_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__181_input.grad_fn._saved_result'] = ___181_input.grad_fn._saved_result.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___181_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___181_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_result2'] = ___181_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_result1'] = ___181_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__181_input.grad_fn.next_functions[0][0]._saved_result3'] = ___181_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___185_input = torch._convolution(__183_fv, self.layer1[2].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__185_input = ___185_input.detach();__185_input.requires_grad_();\nshapes['__185_input'] = __185_input.shape;shapes['__185_input.grad_fn._saved_input'] = ___185_input.grad_fn._saved_input.shape;", "___197_input = torch.batch_norm(__185_input, self.layer1[2].bn2.weight, self.layer1[2].bn2.bias, self.layer1[2].bn2.running_mean, self.layer1[2].bn2.running_var, True, 0.1, 1e-05, True)\n___198_fv = torch.relu_(___197_input)\n__197_input = ___197_input.detach();__197_input.requires_grad_();\n__198_fv = __197_input\nshapes['__197_input'] = __197_input.shape;shapes['__198_fv'] = __198_fv.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_input'] = ___197_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__197_input.grad_fn._saved_result'] = ___197_input.grad_fn._saved_result.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___197_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_result1'] = ___197_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_result2'] = ___197_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_result3'] = ___197_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__197_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___197_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___201_input = torch._convolution(__198_fv, self.layer1[2].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__201_input = ___201_input.detach();__201_input.requires_grad_();\nshapes['__201_input'] = __201_input.shape;shapes['__201_input.grad_fn._saved_input'] = ___201_input.grad_fn._saved_input.shape;", "___212_out = torch.batch_norm(__201_input, self.layer1[2].bn3.weight, self.layer1[2].bn3.bias, self.layer1[2].bn3.running_mean, self.layer1[2].bn3.running_var, True, 0.1, 1e-05, True)\n___213_input = torch.Tensor.add_(___212_out, __160_fv)\n___214_fv = torch.relu_(___213_input)\n__212_out = ___212_out.detach();__212_out.requires_grad_();\n__213_input = __212_out\n__214_fv = __213_input\nshapes['__212_out'] = __212_out.shape;shapes['__213_input'] = __213_input.shape;shapes['__214_fv'] = __214_fv.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__212_out.grad_fn._saved_result'] = ___212_out.grad_fn._saved_result.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___212_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___231_input = torch._convolution(__214_fv, self.layer2[0].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__231_input = ___231_input.detach();__231_input.requires_grad_();\nshapes['__231_input'] = __231_input.shape;", "___242_input = torch.batch_norm(__231_input, self.layer2[0].bn1.weight, self.layer2[0].bn1.bias, self.layer2[0].bn1.running_mean, self.layer2[0].bn1.running_var, True, 0.1, 1e-05, True)\n___244_fv = torch.relu_(___242_input)\n__242_input = ___242_input.detach();__242_input.requires_grad_();\n__244_fv = __242_input\nshapes['__242_input'] = __242_input.shape;shapes['__244_fv'] = __244_fv.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_input'] = ___242_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__242_input.grad_fn._saved_result'] = ___242_input.grad_fn._saved_result.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___242_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_result3'] = ___242_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_result1'] = ___242_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_result2'] = ___242_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__242_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___242_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___246_input = torch._convolution(__244_fv, self.layer2[0].conv2.weight, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__246_input = ___246_input.detach();__246_input.requires_grad_();\nshapes['__246_input'] = __246_input.shape;shapes['__246_input.grad_fn._saved_input'] = ___246_input.grad_fn._saved_input.shape;", "___258_input = torch.batch_norm(__246_input, self.layer2[0].bn2.weight, self.layer2[0].bn2.bias, self.layer2[0].bn2.running_mean, self.layer2[0].bn2.running_var, True, 0.1, 1e-05, True)\n___259_fv = torch.relu_(___258_input)\n__258_input = ___258_input.detach();__258_input.requires_grad_();\n__259_fv = __258_input\nshapes['__258_input'] = __258_input.shape;shapes['__259_fv'] = __259_fv.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_input'] = ___258_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__258_input.grad_fn._saved_result'] = ___258_input.grad_fn._saved_result.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_result1'] = ___258_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_result2'] = ___258_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___258_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_result3'] = ___258_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__258_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___258_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___262_input = torch._convolution(__259_fv, self.layer2[0].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__262_input = ___262_input.detach();__262_input.requires_grad_();\nshapes['__262_input'] = __262_input.shape;shapes['__262_input.grad_fn._saved_input'] = ___262_input.grad_fn._saved_input.shape;", "___279_input = torch._convolution(__214_fv, self.layer2[0].downsample[0].weight, None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__279_input = ___279_input.detach();__279_input.requires_grad_();\nshapes['__279_input'] = __279_input.shape;", "___290_identity = torch.batch_norm(__279_input, self.layer2[0].downsample[1].weight, self.layer2[0].downsample[1].bias, self.layer2[0].downsample[1].running_mean, self.layer2[0].downsample[1].running_var, True, 0.1, 1e-05, True)\n\n__290_identity = ___290_identity.detach();__290_identity.requires_grad_();\nshapes['__290_identity'] = __290_identity.shape;shapes['__290_identity.grad_fn._saved_input'] = ___290_identity.grad_fn._saved_input.shape;shapes['__290_identity.grad_fn._saved_running_mean'] = ___290_identity.grad_fn._saved_running_mean.shape;shapes['__290_identity.grad_fn._saved_result3'] = ___290_identity.grad_fn._saved_result3.shape;shapes['__290_identity.grad_fn._saved_result1'] = ___290_identity.grad_fn._saved_result1.shape;shapes['__290_identity.grad_fn._saved_running_var'] = ___290_identity.grad_fn._saved_running_var.shape;shapes['__290_identity.grad_fn._saved_result2'] = ___290_identity.grad_fn._saved_result2.shape;", "___273_out = torch.batch_norm(__262_input, self.layer2[0].bn3.weight, self.layer2[0].bn3.bias, self.layer2[0].bn3.running_mean, self.layer2[0].bn3.running_var, True, 0.1, 1e-05, True)\n___274_input = torch.Tensor.add_(___273_out, __290_identity)\n___291_fv = torch.relu_(___274_input)\n__273_out = ___273_out.detach();__273_out.requires_grad_();\n__274_input = __273_out\n__291_fv = __274_input\nshapes['__273_out'] = __273_out.shape;shapes['__274_input'] = __274_input.shape;shapes['__291_fv'] = __291_fv.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__273_out.grad_fn._saved_result'] = ___273_out.grad_fn._saved_result.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___273_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;", '___290_identity.data = torch.empty(0,device=device);__290_identity.data = torch.empty(0,device=device); ', "loss = 'LOSS'\n\n"]
["___301_input = torch._convolution(__291_fv, self.layer2[1].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__301_input = ___301_input.detach();__301_input.requires_grad_();\nshapes['__301_input'] = __301_input.shape;", "___312_input = torch.batch_norm(__301_input, self.layer2[1].bn1.weight, self.layer2[1].bn1.bias, self.layer2[1].bn1.running_mean, self.layer2[1].bn1.running_var, True, 0.1, 1e-05, True)\n___314_fv = torch.relu_(___312_input)\n__312_input = ___312_input.detach();__312_input.requires_grad_();\n__314_fv = __312_input\nshapes['__312_input'] = __312_input.shape;shapes['__314_fv'] = __314_fv.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_input'] = ___312_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__312_input.grad_fn._saved_result'] = ___312_input.grad_fn._saved_result.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_result3'] = ___312_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_result1'] = ___312_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_result2'] = ___312_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___312_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__312_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___312_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___316_input = torch._convolution(__314_fv, self.layer2[1].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__316_input = ___316_input.detach();__316_input.requires_grad_();\nshapes['__316_input'] = __316_input.shape;shapes['__316_input.grad_fn._saved_input'] = ___316_input.grad_fn._saved_input.shape;", "___328_input = torch.batch_norm(__316_input, self.layer2[1].bn2.weight, self.layer2[1].bn2.bias, self.layer2[1].bn2.running_mean, self.layer2[1].bn2.running_var, True, 0.1, 1e-05, True)\n___329_fv = torch.relu_(___328_input)\n__328_input = ___328_input.detach();__328_input.requires_grad_();\n__329_fv = __328_input\nshapes['__328_input'] = __328_input.shape;shapes['__329_fv'] = __329_fv.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_input'] = ___328_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__328_input.grad_fn._saved_result'] = ___328_input.grad_fn._saved_result.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_result1'] = ___328_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_result3'] = ___328_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___328_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___328_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__328_input.grad_fn.next_functions[0][0]._saved_result2'] = ___328_input.grad_fn.next_functions[0][0]._saved_result2.shape;", "___332_input = torch._convolution(__329_fv, self.layer2[1].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__332_input = ___332_input.detach();__332_input.requires_grad_();\nshapes['__332_input'] = __332_input.shape;shapes['__332_input.grad_fn._saved_input'] = ___332_input.grad_fn._saved_input.shape;", "___343_out = torch.batch_norm(__332_input, self.layer2[1].bn3.weight, self.layer2[1].bn3.bias, self.layer2[1].bn3.running_mean, self.layer2[1].bn3.running_var, True, 0.1, 1e-05, True)\n___344_input = torch.Tensor.add_(___343_out, __291_fv)\n___345_fv = torch.relu_(___344_input)\n__343_out = ___343_out.detach();__343_out.requires_grad_();\n__344_input = __343_out\n__345_fv = __344_input\nshapes['__343_out'] = __343_out.shape;shapes['__344_input'] = __344_input.shape;shapes['__345_fv'] = __345_fv.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__343_out.grad_fn._saved_result'] = ___343_out.grad_fn._saved_result.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___343_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;", "loss = 'LOSS'\n\n"]
["___355_input = torch._convolution(__345_fv, self.layer2[2].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__355_input = ___355_input.detach();__355_input.requires_grad_();\nshapes['__355_input'] = __355_input.shape;", "___366_input = torch.batch_norm(__355_input, self.layer2[2].bn1.weight, self.layer2[2].bn1.bias, self.layer2[2].bn1.running_mean, self.layer2[2].bn1.running_var, True, 0.1, 1e-05, True)\n___368_fv = torch.relu_(___366_input)\n__366_input = ___366_input.detach();__366_input.requires_grad_();\n__368_fv = __366_input\nshapes['__366_input'] = __366_input.shape;shapes['__368_fv'] = __368_fv.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_input'] = ___366_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__366_input.grad_fn._saved_result'] = ___366_input.grad_fn._saved_result.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_result3'] = ___366_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_result1'] = ___366_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_result2'] = ___366_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___366_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__366_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___366_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___370_input = torch._convolution(__368_fv, self.layer2[2].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__370_input = ___370_input.detach();__370_input.requires_grad_();\nshapes['__370_input'] = __370_input.shape;shapes['__370_input.grad_fn._saved_input'] = ___370_input.grad_fn._saved_input.shape;", "___382_input = torch.batch_norm(__370_input, self.layer2[2].bn2.weight, self.layer2[2].bn2.bias, self.layer2[2].bn2.running_mean, self.layer2[2].bn2.running_var, True, 0.1, 1e-05, True)\n___383_fv = torch.relu_(___382_input)\n__382_input = ___382_input.detach();__382_input.requires_grad_();\n__383_fv = __382_input\nshapes['__382_input'] = __382_input.shape;shapes['__383_fv'] = __383_fv.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_input'] = ___382_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__382_input.grad_fn._saved_result'] = ___382_input.grad_fn._saved_result.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_result1'] = ___382_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_result3'] = ___382_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___382_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___382_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__382_input.grad_fn.next_functions[0][0]._saved_result2'] = ___382_input.grad_fn.next_functions[0][0]._saved_result2.shape;", "___386_input = torch._convolution(__383_fv, self.layer2[2].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__386_input = ___386_input.detach();__386_input.requires_grad_();\nshapes['__386_input'] = __386_input.shape;shapes['__386_input.grad_fn._saved_input'] = ___386_input.grad_fn._saved_input.shape;", "___397_out = torch.batch_norm(__386_input, self.layer2[2].bn3.weight, self.layer2[2].bn3.bias, self.layer2[2].bn3.running_mean, self.layer2[2].bn3.running_var, True, 0.1, 1e-05, True)\n___398_input = torch.Tensor.add_(___397_out, __345_fv)\n___399_fv = torch.relu_(___398_input)\n__397_out = ___397_out.detach();__397_out.requires_grad_();\n__398_input = __397_out\n__399_fv = __398_input\nshapes['__397_out'] = __397_out.shape;shapes['__398_input'] = __398_input.shape;shapes['__399_fv'] = __399_fv.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__397_out.grad_fn._saved_result'] = ___397_out.grad_fn._saved_result.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___397_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;", "loss = 'LOSS'\n\n"]
["___409_input = torch._convolution(__399_fv, self.layer2[3].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__409_input = ___409_input.detach();__409_input.requires_grad_();\nshapes['__409_input'] = __409_input.shape;", "___420_input = torch.batch_norm(__409_input, self.layer2[3].bn1.weight, self.layer2[3].bn1.bias, self.layer2[3].bn1.running_mean, self.layer2[3].bn1.running_var, True, 0.1, 1e-05, True)\n___422_fv = torch.relu_(___420_input)\n__420_input = ___420_input.detach();__420_input.requires_grad_();\n__422_fv = __420_input\nshapes['__420_input'] = __420_input.shape;shapes['__422_fv'] = __422_fv.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_input'] = ___420_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__420_input.grad_fn._saved_result'] = ___420_input.grad_fn._saved_result.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_result3'] = ___420_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_result1'] = ___420_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_result2'] = ___420_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___420_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__420_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___420_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___424_input = torch._convolution(__422_fv, self.layer2[3].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__424_input = ___424_input.detach();__424_input.requires_grad_();\nshapes['__424_input'] = __424_input.shape;shapes['__424_input.grad_fn._saved_input'] = ___424_input.grad_fn._saved_input.shape;", "___436_input = torch.batch_norm(__424_input, self.layer2[3].bn2.weight, self.layer2[3].bn2.bias, self.layer2[3].bn2.running_mean, self.layer2[3].bn2.running_var, True, 0.1, 1e-05, True)\n___437_fv = torch.relu_(___436_input)\n__436_input = ___436_input.detach();__436_input.requires_grad_();\n__437_fv = __436_input\nshapes['__436_input'] = __436_input.shape;shapes['__437_fv'] = __437_fv.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_input'] = ___436_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__436_input.grad_fn._saved_result'] = ___436_input.grad_fn._saved_result.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_result1'] = ___436_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_result3'] = ___436_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___436_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___436_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__436_input.grad_fn.next_functions[0][0]._saved_result2'] = ___436_input.grad_fn.next_functions[0][0]._saved_result2.shape;", "___440_input = torch._convolution(__437_fv, self.layer2[3].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__440_input = ___440_input.detach();__440_input.requires_grad_();\nshapes['__440_input'] = __440_input.shape;shapes['__440_input.grad_fn._saved_input'] = ___440_input.grad_fn._saved_input.shape;", "___451_out = torch.batch_norm(__440_input, self.layer2[3].bn3.weight, self.layer2[3].bn3.bias, self.layer2[3].bn3.running_mean, self.layer2[3].bn3.running_var, True, 0.1, 1e-05, True)\n___452_input = torch.Tensor.add_(___451_out, __399_fv)\n___453_fv = torch.relu_(___452_input)\n__451_out = ___451_out.detach();__451_out.requires_grad_();\n__452_input = __451_out\n__453_fv = __452_input\nshapes['__451_out'] = __451_out.shape;shapes['__452_input'] = __452_input.shape;shapes['__453_fv'] = __453_fv.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__451_out.grad_fn._saved_result'] = ___451_out.grad_fn._saved_result.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___451_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;", "loss = 'LOSS'\n\n"]
["___471_input = torch._convolution(__453_fv, self.layer3[0].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__471_input = ___471_input.detach();__471_input.requires_grad_();\nshapes['__471_input'] = __471_input.shape;", "___482_input = torch.batch_norm(__471_input, self.layer3[0].bn1.weight, self.layer3[0].bn1.bias, self.layer3[0].bn1.running_mean, self.layer3[0].bn1.running_var, True, 0.1, 1e-05, True)\n___484_fv = torch.relu_(___482_input)\n__482_input = ___482_input.detach();__482_input.requires_grad_();\n__484_fv = __482_input\nshapes['__482_input'] = __482_input.shape;shapes['__484_fv'] = __484_fv.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_input'] = ___482_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__482_input.grad_fn._saved_result'] = ___482_input.grad_fn._saved_result.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_result1'] = ___482_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_result2'] = ___482_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___482_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_result3'] = ___482_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__482_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___482_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___486_input = torch._convolution(__484_fv, self.layer3[0].conv2.weight, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__486_input = ___486_input.detach();__486_input.requires_grad_();\nshapes['__486_input'] = __486_input.shape;shapes['__486_input.grad_fn._saved_input'] = ___486_input.grad_fn._saved_input.shape;", "___498_input = torch.batch_norm(__486_input, self.layer3[0].bn2.weight, self.layer3[0].bn2.bias, self.layer3[0].bn2.running_mean, self.layer3[0].bn2.running_var, True, 0.1, 1e-05, True)\n___499_fv = torch.relu_(___498_input)\n__498_input = ___498_input.detach();__498_input.requires_grad_();\n__499_fv = __498_input\nshapes['__498_input'] = __498_input.shape;shapes['__499_fv'] = __499_fv.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_input'] = ___498_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__498_input.grad_fn._saved_result'] = ___498_input.grad_fn._saved_result.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_result2'] = ___498_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_result3'] = ___498_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___498_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_result1'] = ___498_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__498_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___498_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___502_input = torch._convolution(__499_fv, self.layer3[0].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__502_input = ___502_input.detach();__502_input.requires_grad_();\nshapes['__502_input'] = __502_input.shape;shapes['__502_input.grad_fn._saved_input'] = ___502_input.grad_fn._saved_input.shape;", "___519_input = torch._convolution(__453_fv, self.layer3[0].downsample[0].weight, None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__519_input = ___519_input.detach();__519_input.requires_grad_();\nshapes['__519_input'] = __519_input.shape;", "___530_identity = torch.batch_norm(__519_input, self.layer3[0].downsample[1].weight, self.layer3[0].downsample[1].bias, self.layer3[0].downsample[1].running_mean, self.layer3[0].downsample[1].running_var, True, 0.1, 1e-05, True)\n\n__530_identity = ___530_identity.detach();__530_identity.requires_grad_();\nshapes['__530_identity'] = __530_identity.shape;shapes['__530_identity.grad_fn._saved_input'] = ___530_identity.grad_fn._saved_input.shape;shapes['__530_identity.grad_fn._saved_running_mean'] = ___530_identity.grad_fn._saved_running_mean.shape;shapes['__530_identity.grad_fn._saved_running_var'] = ___530_identity.grad_fn._saved_running_var.shape;shapes['__530_identity.grad_fn._saved_result3'] = ___530_identity.grad_fn._saved_result3.shape;shapes['__530_identity.grad_fn._saved_result1'] = ___530_identity.grad_fn._saved_result1.shape;shapes['__530_identity.grad_fn._saved_result2'] = ___530_identity.grad_fn._saved_result2.shape;", "___513_out = torch.batch_norm(__502_input, self.layer3[0].bn3.weight, self.layer3[0].bn3.bias, self.layer3[0].bn3.running_mean, self.layer3[0].bn3.running_var, True, 0.1, 1e-05, True)\n___514_input = torch.Tensor.add_(___513_out, __530_identity)\n___531_fv = torch.relu_(___514_input)\n__513_out = ___513_out.detach();__513_out.requires_grad_();\n__514_input = __513_out\n__531_fv = __514_input\nshapes['__513_out'] = __513_out.shape;shapes['__514_input'] = __514_input.shape;shapes['__531_fv'] = __531_fv.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__513_out.grad_fn._saved_result'] = ___513_out.grad_fn._saved_result.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___513_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;", '___530_identity.data = torch.empty(0,device=device);__530_identity.data = torch.empty(0,device=device); ', "loss = 'LOSS'\n\n"]
["___541_input = torch._convolution(__531_fv, self.layer3[1].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__541_input = ___541_input.detach();__541_input.requires_grad_();\nshapes['__541_input'] = __541_input.shape;", "___552_input = torch.batch_norm(__541_input, self.layer3[1].bn1.weight, self.layer3[1].bn1.bias, self.layer3[1].bn1.running_mean, self.layer3[1].bn1.running_var, True, 0.1, 1e-05, True)\n___554_fv = torch.relu_(___552_input)\n__552_input = ___552_input.detach();__552_input.requires_grad_();\n__554_fv = __552_input\nshapes['__552_input'] = __552_input.shape;shapes['__554_fv'] = __554_fv.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_input'] = ___552_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__552_input.grad_fn._saved_result'] = ___552_input.grad_fn._saved_result.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_result1'] = ___552_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___552_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_result2'] = ___552_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___552_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__552_input.grad_fn.next_functions[0][0]._saved_result3'] = ___552_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___556_input = torch._convolution(__554_fv, self.layer3[1].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__556_input = ___556_input.detach();__556_input.requires_grad_();\nshapes['__556_input'] = __556_input.shape;shapes['__556_input.grad_fn._saved_input'] = ___556_input.grad_fn._saved_input.shape;", "___568_input = torch.batch_norm(__556_input, self.layer3[1].bn2.weight, self.layer3[1].bn2.bias, self.layer3[1].bn2.running_mean, self.layer3[1].bn2.running_var, True, 0.1, 1e-05, True)\n___569_fv = torch.relu_(___568_input)\n__568_input = ___568_input.detach();__568_input.requires_grad_();\n__569_fv = __568_input\nshapes['__568_input'] = __568_input.shape;shapes['__569_fv'] = __569_fv.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_input'] = ___568_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__568_input.grad_fn._saved_result'] = ___568_input.grad_fn._saved_result.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___568_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_result1'] = ___568_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_result2'] = ___568_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___568_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__568_input.grad_fn.next_functions[0][0]._saved_result3'] = ___568_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___572_input = torch._convolution(__569_fv, self.layer3[1].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__572_input = ___572_input.detach();__572_input.requires_grad_();\nshapes['__572_input'] = __572_input.shape;shapes['__572_input.grad_fn._saved_input'] = ___572_input.grad_fn._saved_input.shape;", "___583_out = torch.batch_norm(__572_input, self.layer3[1].bn3.weight, self.layer3[1].bn3.bias, self.layer3[1].bn3.running_mean, self.layer3[1].bn3.running_var, True, 0.1, 1e-05, True)\n___584_input = torch.Tensor.add_(___583_out, __531_fv)\n___585_fv = torch.relu_(___584_input)\n__583_out = ___583_out.detach();__583_out.requires_grad_();\n__584_input = __583_out\n__585_fv = __584_input\nshapes['__583_out'] = __583_out.shape;shapes['__584_input'] = __584_input.shape;shapes['__585_fv'] = __585_fv.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__583_out.grad_fn._saved_result'] = ___583_out.grad_fn._saved_result.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___583_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___596_input = torch._convolution(__585_fv, self.layer3[2].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__596_input = ___596_input.detach();__596_input.requires_grad_();\nshapes['__596_input'] = __596_input.shape;", "___607_input = torch.batch_norm(__596_input, self.layer3[2].bn1.weight, self.layer3[2].bn1.bias, self.layer3[2].bn1.running_mean, self.layer3[2].bn1.running_var, True, 0.1, 1e-05, True)\n___609_fv = torch.relu_(___607_input)\n__607_input = ___607_input.detach();__607_input.requires_grad_();\n__609_fv = __607_input\nshapes['__607_input'] = __607_input.shape;shapes['__609_fv'] = __609_fv.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_input'] = ___607_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__607_input.grad_fn._saved_result'] = ___607_input.grad_fn._saved_result.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_result1'] = ___607_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___607_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_result2'] = ___607_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___607_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__607_input.grad_fn.next_functions[0][0]._saved_result3'] = ___607_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___611_input = torch._convolution(__609_fv, self.layer3[2].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__611_input = ___611_input.detach();__611_input.requires_grad_();\nshapes['__611_input'] = __611_input.shape;shapes['__611_input.grad_fn._saved_input'] = ___611_input.grad_fn._saved_input.shape;", "___623_input = torch.batch_norm(__611_input, self.layer3[2].bn2.weight, self.layer3[2].bn2.bias, self.layer3[2].bn2.running_mean, self.layer3[2].bn2.running_var, True, 0.1, 1e-05, True)\n___624_fv = torch.relu_(___623_input)\n__623_input = ___623_input.detach();__623_input.requires_grad_();\n__624_fv = __623_input\nshapes['__623_input'] = __623_input.shape;shapes['__624_fv'] = __624_fv.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_input'] = ___623_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__623_input.grad_fn._saved_result'] = ___623_input.grad_fn._saved_result.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___623_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_result1'] = ___623_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_result2'] = ___623_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___623_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__623_input.grad_fn.next_functions[0][0]._saved_result3'] = ___623_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___627_input = torch._convolution(__624_fv, self.layer3[2].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__627_input = ___627_input.detach();__627_input.requires_grad_();\nshapes['__627_input'] = __627_input.shape;shapes['__627_input.grad_fn._saved_input'] = ___627_input.grad_fn._saved_input.shape;", "___638_out = torch.batch_norm(__627_input, self.layer3[2].bn3.weight, self.layer3[2].bn3.bias, self.layer3[2].bn3.running_mean, self.layer3[2].bn3.running_var, True, 0.1, 1e-05, True)\n___639_input = torch.Tensor.add_(___638_out, __585_fv)\n___640_fv = torch.relu_(___639_input)\n__638_out = ___638_out.detach();__638_out.requires_grad_();\n__639_input = __638_out\n__640_fv = __639_input\nshapes['__638_out'] = __638_out.shape;shapes['__639_input'] = __639_input.shape;shapes['__640_fv'] = __640_fv.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__638_out.grad_fn._saved_result'] = ___638_out.grad_fn._saved_result.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___638_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___650_input = torch._convolution(__640_fv, self.layer3[3].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__650_input = ___650_input.detach();__650_input.requires_grad_();\nshapes['__650_input'] = __650_input.shape;", "___661_input = torch.batch_norm(__650_input, self.layer3[3].bn1.weight, self.layer3[3].bn1.bias, self.layer3[3].bn1.running_mean, self.layer3[3].bn1.running_var, True, 0.1, 1e-05, True)\n___663_fv = torch.relu_(___661_input)\n__661_input = ___661_input.detach();__661_input.requires_grad_();\n__663_fv = __661_input\nshapes['__661_input'] = __661_input.shape;shapes['__663_fv'] = __663_fv.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_input'] = ___661_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__661_input.grad_fn._saved_result'] = ___661_input.grad_fn._saved_result.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_result1'] = ___661_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___661_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_result2'] = ___661_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___661_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__661_input.grad_fn.next_functions[0][0]._saved_result3'] = ___661_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___665_input = torch._convolution(__663_fv, self.layer3[3].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__665_input = ___665_input.detach();__665_input.requires_grad_();\nshapes['__665_input'] = __665_input.shape;shapes['__665_input.grad_fn._saved_input'] = ___665_input.grad_fn._saved_input.shape;", "___677_input = torch.batch_norm(__665_input, self.layer3[3].bn2.weight, self.layer3[3].bn2.bias, self.layer3[3].bn2.running_mean, self.layer3[3].bn2.running_var, True, 0.1, 1e-05, True)\n___678_fv = torch.relu_(___677_input)\n__677_input = ___677_input.detach();__677_input.requires_grad_();\n__678_fv = __677_input\nshapes['__677_input'] = __677_input.shape;shapes['__678_fv'] = __678_fv.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_input'] = ___677_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__677_input.grad_fn._saved_result'] = ___677_input.grad_fn._saved_result.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___677_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_result1'] = ___677_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_result2'] = ___677_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___677_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__677_input.grad_fn.next_functions[0][0]._saved_result3'] = ___677_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___681_input = torch._convolution(__678_fv, self.layer3[3].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__681_input = ___681_input.detach();__681_input.requires_grad_();\nshapes['__681_input'] = __681_input.shape;shapes['__681_input.grad_fn._saved_input'] = ___681_input.grad_fn._saved_input.shape;", "___692_out = torch.batch_norm(__681_input, self.layer3[3].bn3.weight, self.layer3[3].bn3.bias, self.layer3[3].bn3.running_mean, self.layer3[3].bn3.running_var, True, 0.1, 1e-05, True)\n___693_input = torch.Tensor.add_(___692_out, __640_fv)\n___694_fv = torch.relu_(___693_input)\n__692_out = ___692_out.detach();__692_out.requires_grad_();\n__693_input = __692_out\n__694_fv = __693_input\nshapes['__692_out'] = __692_out.shape;shapes['__693_input'] = __693_input.shape;shapes['__694_fv'] = __694_fv.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__692_out.grad_fn._saved_result'] = ___692_out.grad_fn._saved_result.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___692_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___704_input = torch._convolution(__694_fv, self.layer3[4].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__704_input = ___704_input.detach();__704_input.requires_grad_();\nshapes['__704_input'] = __704_input.shape;", "___715_input = torch.batch_norm(__704_input, self.layer3[4].bn1.weight, self.layer3[4].bn1.bias, self.layer3[4].bn1.running_mean, self.layer3[4].bn1.running_var, True, 0.1, 1e-05, True)\n___717_fv = torch.relu_(___715_input)\n__715_input = ___715_input.detach();__715_input.requires_grad_();\n__717_fv = __715_input\nshapes['__715_input'] = __715_input.shape;shapes['__717_fv'] = __717_fv.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_input'] = ___715_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__715_input.grad_fn._saved_result'] = ___715_input.grad_fn._saved_result.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_result1'] = ___715_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___715_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_result2'] = ___715_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___715_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__715_input.grad_fn.next_functions[0][0]._saved_result3'] = ___715_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___719_input = torch._convolution(__717_fv, self.layer3[4].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__719_input = ___719_input.detach();__719_input.requires_grad_();\nshapes['__719_input'] = __719_input.shape;shapes['__719_input.grad_fn._saved_input'] = ___719_input.grad_fn._saved_input.shape;", "___731_input = torch.batch_norm(__719_input, self.layer3[4].bn2.weight, self.layer3[4].bn2.bias, self.layer3[4].bn2.running_mean, self.layer3[4].bn2.running_var, True, 0.1, 1e-05, True)\n___732_fv = torch.relu_(___731_input)\n__731_input = ___731_input.detach();__731_input.requires_grad_();\n__732_fv = __731_input\nshapes['__731_input'] = __731_input.shape;shapes['__732_fv'] = __732_fv.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_input'] = ___731_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__731_input.grad_fn._saved_result'] = ___731_input.grad_fn._saved_result.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___731_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_result1'] = ___731_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_result2'] = ___731_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___731_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__731_input.grad_fn.next_functions[0][0]._saved_result3'] = ___731_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___735_input = torch._convolution(__732_fv, self.layer3[4].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__735_input = ___735_input.detach();__735_input.requires_grad_();\nshapes['__735_input'] = __735_input.shape;shapes['__735_input.grad_fn._saved_input'] = ___735_input.grad_fn._saved_input.shape;", "___746_out = torch.batch_norm(__735_input, self.layer3[4].bn3.weight, self.layer3[4].bn3.bias, self.layer3[4].bn3.running_mean, self.layer3[4].bn3.running_var, True, 0.1, 1e-05, True)\n___747_input = torch.Tensor.add_(___746_out, __694_fv)\n___748_fv = torch.relu_(___747_input)\n__746_out = ___746_out.detach();__746_out.requires_grad_();\n__747_input = __746_out\n__748_fv = __747_input\nshapes['__746_out'] = __746_out.shape;shapes['__747_input'] = __747_input.shape;shapes['__748_fv'] = __748_fv.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__746_out.grad_fn._saved_result'] = ___746_out.grad_fn._saved_result.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___746_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___758_input = torch._convolution(__748_fv, self.layer3[5].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__758_input = ___758_input.detach();__758_input.requires_grad_();\nshapes['__758_input'] = __758_input.shape;", "___769_input = torch.batch_norm(__758_input, self.layer3[5].bn1.weight, self.layer3[5].bn1.bias, self.layer3[5].bn1.running_mean, self.layer3[5].bn1.running_var, True, 0.1, 1e-05, True)\n___771_fv = torch.relu_(___769_input)\n__769_input = ___769_input.detach();__769_input.requires_grad_();\n__771_fv = __769_input\nshapes['__769_input'] = __769_input.shape;shapes['__771_fv'] = __771_fv.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_input'] = ___769_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__769_input.grad_fn._saved_result'] = ___769_input.grad_fn._saved_result.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_result1'] = ___769_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___769_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_result2'] = ___769_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___769_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__769_input.grad_fn.next_functions[0][0]._saved_result3'] = ___769_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___773_input = torch._convolution(__771_fv, self.layer3[5].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__773_input = ___773_input.detach();__773_input.requires_grad_();\nshapes['__773_input'] = __773_input.shape;shapes['__773_input.grad_fn._saved_input'] = ___773_input.grad_fn._saved_input.shape;", "___785_input = torch.batch_norm(__773_input, self.layer3[5].bn2.weight, self.layer3[5].bn2.bias, self.layer3[5].bn2.running_mean, self.layer3[5].bn2.running_var, True, 0.1, 1e-05, True)\n___786_fv = torch.relu_(___785_input)\n__785_input = ___785_input.detach();__785_input.requires_grad_();\n__786_fv = __785_input\nshapes['__785_input'] = __785_input.shape;shapes['__786_fv'] = __786_fv.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_input'] = ___785_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__785_input.grad_fn._saved_result'] = ___785_input.grad_fn._saved_result.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___785_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_result1'] = ___785_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_result2'] = ___785_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___785_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__785_input.grad_fn.next_functions[0][0]._saved_result3'] = ___785_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___789_input = torch._convolution(__786_fv, self.layer3[5].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__789_input = ___789_input.detach();__789_input.requires_grad_();\nshapes['__789_input'] = __789_input.shape;shapes['__789_input.grad_fn._saved_input'] = ___789_input.grad_fn._saved_input.shape;", "___800_out = torch.batch_norm(__789_input, self.layer3[5].bn3.weight, self.layer3[5].bn3.bias, self.layer3[5].bn3.running_mean, self.layer3[5].bn3.running_var, True, 0.1, 1e-05, True)\n___801_input = torch.Tensor.add_(___800_out, __748_fv)\n___802_fv = torch.relu_(___801_input)\n__800_out = ___800_out.detach();__800_out.requires_grad_();\n__801_input = __800_out\n__802_fv = __801_input\nshapes['__800_out'] = __800_out.shape;shapes['__801_input'] = __801_input.shape;shapes['__802_fv'] = __802_fv.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__800_out.grad_fn._saved_result'] = ___800_out.grad_fn._saved_result.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;shapes['__800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___800_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;", "loss = 'LOSS'\n\n"]
["___818_input = torch._convolution(__802_fv, self.layer4[0].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__818_input = ___818_input.detach();__818_input.requires_grad_();\nshapes['__818_input'] = __818_input.shape;", "___829_input = torch.batch_norm(__818_input, self.layer4[0].bn1.weight, self.layer4[0].bn1.bias, self.layer4[0].bn1.running_mean, self.layer4[0].bn1.running_var, True, 0.1, 1e-05, True)\n___831_fv = torch.relu_(___829_input)\n__829_input = ___829_input.detach();__829_input.requires_grad_();\n__831_fv = __829_input\nshapes['__829_input'] = __829_input.shape;shapes['__831_fv'] = __831_fv.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_input'] = ___829_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__829_input.grad_fn._saved_result'] = ___829_input.grad_fn._saved_result.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___829_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___829_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_result2'] = ___829_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_result1'] = ___829_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__829_input.grad_fn.next_functions[0][0]._saved_result3'] = ___829_input.grad_fn.next_functions[0][0]._saved_result3.shape;", "___833_input = torch._convolution(__831_fv, self.layer4[0].conv2.weight, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__833_input = ___833_input.detach();__833_input.requires_grad_();\nshapes['__833_input'] = __833_input.shape;shapes['__833_input.grad_fn._saved_input'] = ___833_input.grad_fn._saved_input.shape;", "___845_input = torch.batch_norm(__833_input, self.layer4[0].bn2.weight, self.layer4[0].bn2.bias, self.layer4[0].bn2.running_mean, self.layer4[0].bn2.running_var, True, 0.1, 1e-05, True)\n___846_fv = torch.relu_(___845_input)\n__845_input = ___845_input.detach();__845_input.requires_grad_();\n__846_fv = __845_input\nshapes['__845_input'] = __845_input.shape;shapes['__846_fv'] = __846_fv.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_input'] = ___845_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__845_input.grad_fn._saved_result'] = ___845_input.grad_fn._saved_result.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_result3'] = ___845_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_result2'] = ___845_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___845_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___845_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__845_input.grad_fn.next_functions[0][0]._saved_result1'] = ___845_input.grad_fn.next_functions[0][0]._saved_result1.shape;", "___849_input = torch._convolution(__846_fv, self.layer4[0].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__849_input = ___849_input.detach();__849_input.requires_grad_();\nshapes['__849_input'] = __849_input.shape;shapes['__849_input.grad_fn._saved_input'] = ___849_input.grad_fn._saved_input.shape;", "___866_input = torch._convolution(__802_fv, self.layer4[0].downsample[0].weight, None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__866_input = ___866_input.detach();__866_input.requires_grad_();\nshapes['__866_input'] = __866_input.shape;", "___877_identity = torch.batch_norm(__866_input, self.layer4[0].downsample[1].weight, self.layer4[0].downsample[1].bias, self.layer4[0].downsample[1].running_mean, self.layer4[0].downsample[1].running_var, True, 0.1, 1e-05, True)\n\n__877_identity = ___877_identity.detach();__877_identity.requires_grad_();\nshapes['__877_identity'] = __877_identity.shape;shapes['__877_identity.grad_fn._saved_input'] = ___877_identity.grad_fn._saved_input.shape;shapes['__877_identity.grad_fn._saved_result2'] = ___877_identity.grad_fn._saved_result2.shape;shapes['__877_identity.grad_fn._saved_result1'] = ___877_identity.grad_fn._saved_result1.shape;shapes['__877_identity.grad_fn._saved_running_mean'] = ___877_identity.grad_fn._saved_running_mean.shape;shapes['__877_identity.grad_fn._saved_result3'] = ___877_identity.grad_fn._saved_result3.shape;shapes['__877_identity.grad_fn._saved_running_var'] = ___877_identity.grad_fn._saved_running_var.shape;", "___860_out = torch.batch_norm(__849_input, self.layer4[0].bn3.weight, self.layer4[0].bn3.bias, self.layer4[0].bn3.running_mean, self.layer4[0].bn3.running_var, True, 0.1, 1e-05, True)\n___861_input = torch.Tensor.add_(___860_out, __877_identity)\n___878_fv = torch.relu_(___861_input)\n__860_out = ___860_out.detach();__860_out.requires_grad_();\n__861_input = __860_out\n__878_fv = __861_input\nshapes['__860_out'] = __860_out.shape;shapes['__861_input'] = __861_input.shape;shapes['__878_fv'] = __878_fv.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__860_out.grad_fn._saved_result'] = ___860_out.grad_fn._saved_result.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___860_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;", '___877_identity.data = torch.empty(0,device=device);__877_identity.data = torch.empty(0,device=device); ', "loss = 'LOSS'\n\n"]
["___888_input = torch._convolution(__878_fv, self.layer4[1].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__888_input = ___888_input.detach();__888_input.requires_grad_();\nshapes['__888_input'] = __888_input.shape;", "___899_input = torch.batch_norm(__888_input, self.layer4[1].bn1.weight, self.layer4[1].bn1.bias, self.layer4[1].bn1.running_mean, self.layer4[1].bn1.running_var, True, 0.1, 1e-05, True)\n___901_fv = torch.relu_(___899_input)\n__899_input = ___899_input.detach();__899_input.requires_grad_();\n__901_fv = __899_input\nshapes['__899_input'] = __899_input.shape;shapes['__901_fv'] = __901_fv.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_input'] = ___899_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__899_input.grad_fn._saved_result'] = ___899_input.grad_fn._saved_result.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___899_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_result2'] = ___899_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_result3'] = ___899_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_result1'] = ___899_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__899_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___899_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___903_input = torch._convolution(__901_fv, self.layer4[1].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__903_input = ___903_input.detach();__903_input.requires_grad_();\nshapes['__903_input'] = __903_input.shape;shapes['__903_input.grad_fn._saved_input'] = ___903_input.grad_fn._saved_input.shape;", "___915_input = torch.batch_norm(__903_input, self.layer4[1].bn2.weight, self.layer4[1].bn2.bias, self.layer4[1].bn2.running_mean, self.layer4[1].bn2.running_var, True, 0.1, 1e-05, True)\n___916_fv = torch.relu_(___915_input)\n__915_input = ___915_input.detach();__915_input.requires_grad_();\n__916_fv = __915_input\nshapes['__915_input'] = __915_input.shape;shapes['__916_fv'] = __916_fv.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_input'] = ___915_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__915_input.grad_fn._saved_result'] = ___915_input.grad_fn._saved_result.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_result1'] = ___915_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___915_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_result2'] = ___915_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_result3'] = ___915_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__915_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___915_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___919_input = torch._convolution(__916_fv, self.layer4[1].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__919_input = ___919_input.detach();__919_input.requires_grad_();\nshapes['__919_input'] = __919_input.shape;shapes['__919_input.grad_fn._saved_input'] = ___919_input.grad_fn._saved_input.shape;", "___930_out = torch.batch_norm(__919_input, self.layer4[1].bn3.weight, self.layer4[1].bn3.bias, self.layer4[1].bn3.running_mean, self.layer4[1].bn3.running_var, True, 0.1, 1e-05, True)\n___931_input = torch.Tensor.add_(___930_out, __878_fv)\n___932_fv = torch.relu_(___931_input)\n__930_out = ___930_out.detach();__930_out.requires_grad_();\n__931_input = __930_out\n__932_fv = __931_input\nshapes['__930_out'] = __930_out.shape;shapes['__931_input'] = __931_input.shape;shapes['__932_fv'] = __932_fv.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__930_out.grad_fn._saved_result'] = ___930_out.grad_fn._saved_result.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___930_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;", "loss = 'LOSS'\n\n"]
["___942_input = torch._convolution(__932_fv, self.layer4[2].conv1.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__942_input = ___942_input.detach();__942_input.requires_grad_();\nshapes['__942_input'] = __942_input.shape;", "___953_input = torch.batch_norm(__942_input, self.layer4[2].bn1.weight, self.layer4[2].bn1.bias, self.layer4[2].bn1.running_mean, self.layer4[2].bn1.running_var, True, 0.1, 1e-05, True)\n___955_fv = torch.relu_(___953_input)\n__953_input = ___953_input.detach();__953_input.requires_grad_();\n__955_fv = __953_input\nshapes['__953_input'] = __953_input.shape;shapes['__955_fv'] = __955_fv.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_input'] = ___953_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__953_input.grad_fn._saved_result'] = ___953_input.grad_fn._saved_result.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___953_input.grad_fn.next_functions[0][0]._saved_running_var.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_result2'] = ___953_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_result3'] = ___953_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_result1'] = ___953_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__953_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___953_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;", "___957_input = torch._convolution(__955_fv, self.layer4[2].conv2.weight, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__957_input = ___957_input.detach();__957_input.requires_grad_();\nshapes['__957_input'] = __957_input.shape;shapes['__957_input.grad_fn._saved_input'] = ___957_input.grad_fn._saved_input.shape;", "___969_input = torch.batch_norm(__957_input, self.layer4[2].bn2.weight, self.layer4[2].bn2.bias, self.layer4[2].bn2.running_mean, self.layer4[2].bn2.running_var, True, 0.1, 1e-05, True)\n___970_fv = torch.relu_(___969_input)\n__969_input = ___969_input.detach();__969_input.requires_grad_();\n__970_fv = __969_input\nshapes['__969_input'] = __969_input.shape;shapes['__970_fv'] = __970_fv.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_input'] = ___969_input.grad_fn.next_functions[0][0]._saved_input.shape;shapes['__969_input.grad_fn._saved_result'] = ___969_input.grad_fn._saved_result.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_result1'] = ___969_input.grad_fn.next_functions[0][0]._saved_result1.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_running_mean'] = ___969_input.grad_fn.next_functions[0][0]._saved_running_mean.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_result2'] = ___969_input.grad_fn.next_functions[0][0]._saved_result2.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_result3'] = ___969_input.grad_fn.next_functions[0][0]._saved_result3.shape;shapes['__969_input.grad_fn.next_functions[0][0]._saved_running_var'] = ___969_input.grad_fn.next_functions[0][0]._saved_running_var.shape;", "___973_input = torch._convolution(__970_fv, self.layer4[2].conv3.weight, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1, False, False, True, True)\n\n__973_input = ___973_input.detach();__973_input.requires_grad_();\nshapes['__973_input'] = __973_input.shape;shapes['__973_input.grad_fn._saved_input'] = ___973_input.grad_fn._saved_input.shape;", "___984_out = torch.batch_norm(__973_input, self.layer4[2].bn3.weight, self.layer4[2].bn3.bias, self.layer4[2].bn3.running_mean, self.layer4[2].bn3.running_var, True, 0.1, 1e-05, True)\n___985_input = torch.Tensor.add_(___984_out, __932_fv)\n___986_fv = torch.relu_(___985_input)\n__984_out = ___984_out.detach();__984_out.requires_grad_();\n__985_input = __984_out\n__986_fv = __985_input\nshapes['__984_out'] = __984_out.shape;shapes['__985_input'] = __985_input.shape;shapes['__986_fv'] = __986_fv.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_input.shape;shapes['__984_out.grad_fn._saved_result'] = ___984_out.grad_fn._saved_result.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result2.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_mean.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result1.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_result3.shape;shapes['__984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var'] = ___984_out.grad_fn.next_functions[0][0].next_functions[0][0]._saved_running_var.shape;", "loss = 'LOSS'\n\n"]
["___987_x = torch.nn.functional.adaptive_avg_pool2d(__986_fv, [1, 1])\n\n__987_x = ___987_x.detach();__987_x.requires_grad_();\n__989_input = torch.flatten(__987_x, 1)\nshapes['__987_x'] = __987_x.shape;shapes['__989_input'] = __989_input.shape;", "loss = 'LOSS'\n\n"]
["___992_fv = torch.nn.functional.linear(__989_input, self.fc.weight, self.fc.bias)\n\n__992_fv = ___992_fv.detach();__992_fv.requires_grad_();\nshapes['__992_fv'] = __992_fv.shape;shapes['__992_fv.grad_fn._saved_mat2'] = ___992_fv.grad_fn._saved_mat2.shape;", "loss = 'LOSS'\n\n"]